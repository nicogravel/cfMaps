---
layout: default
title: "connmaps"
comments: true
---

# **Connective Field (CF) modelling**

### Benchmarks for different modelling procedures in cortical connective field (CF) mapping.

Here we compare four flavors of population cortico-cortical connective field (CF) modeling. First, the former implementation in `mrVista` (using Matlab's `lscov`) which implemented a grid search approach [1,2]. Without further optimization, the parameter space revealed by this implementation matches predefined grid value predictions. Second, the implementation part of the *connective field* branch of the [prfpy](https://github.com/VU-Cog-Sci/prfpy) Python package [3]. Using Python scikit-learn optimization functions (implemented as part of the `prfpy` package), the parameter space `prfpy` provides also converges to predefined grid, although at a much faster rate (thanks to the CPU parallelization tool `joblib`). Third, a custom version of more recent CF modelling approach (by So-Hyeon et al. (2024) [4]) that implements a *derivative-free* parameter (CF size) refinement approach ([see here](https://nicogravel.github.io/cfMaps/html/cfmap.html#cfmap.CF_mapping.optimize_connfield_dfree)). Fourth, our custom Python implementation of *automatic differentiation*-powered [gradient descent](https://en.wikipedia.org/wiki/Gradient_descent) using `TensorFlow` and CUDA (partly inspired by the recent Python package [braincoder](https://braincoder-devs.github.io/) [5]) to achieve highly efficient gradient descent ([see here](https://nicogravel.github.io/cfMaps/html/cfmap.html#cfmap.CF_mapping.optimize_connfield_gdescent) and [here](https://nicogravel.github.io/cfMaps/html/cfmap.html#cfmap.CF_mapping.optimize_connfield_joint) for a joint optimization approach that optimizes both CF size and position). To coordinate this effort, we rely on widely used population receptive field mapping tools [6,7] and high-field 7T-MRI retinotopy data kindly made available by [NeuroSpin](https://joliot.cea.fr/drf/joliot/en/Pages/research_entities/NeuroSpin.aspx).

### Questions? ðŸ¦‰


<script src="https://giscus.app/client.js"
        data-repo="nicogravel/cfMaps"
        data-repo-id="R_kgDOQDs4IA"
        data-category="Benchmarks"
        data-category-id="DIC_kwDOQDs4IM4CwuKQ"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="1"
        data-emit-metadata="0"
        data-input-position="top"
        data-theme="light_protanopia"
        data-lang="en"
        data-loading="lazy"
        crossorigin="anonymous"
        async>
</script>






